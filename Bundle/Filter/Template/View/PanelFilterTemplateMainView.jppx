/**************************************************************
*     ####         #                               #          * Jobuzzle - Copyright All rights reserved
*     ####         #                               #          *
*       ##  #####  ######  #     # ####### ####### #  #####   * @Author: revers
*       ## #     # #     # #     #      #       #  # #     #  *
*       ## #     # #     # #     #     #       #   # #     #  * @Date:   2015-08-08 11:12:49
*       ## #     # #     # #     #    #       #    # #     #  *
*       ## #     # #     # #     #   #       #     # ######   * @Last Modified by:   revers
*  ####### #     # #     # #     #  #       #      # #        *
*  ######   #####   ######  #####  ####### ####### # #######  * @Last Modified time: 2015-11-06 20:05:49
**************************************************************/

class PanelFilterTemplateMainView extends PanelFilterTemplateAbstractView {

	public getPreviousTitlePanel : function (obj) {
		if (this.state['title'] instanceof MasterEntity && typeof this.state['title'].displayMiniature == 'function') {
			return <div className="previousTitlePanel">
				{this.state['title'].displayMiniature()}
			</div>;
		}
		return null;
	}

	public render : function () {
		var self = this;
		var router = serviceLocator.get('Router');
		var routeAddFilter = router.buildPartial('create');
		var t = serviceLocator.get('Translator');
		var title = '';
		var current = router.getCurrentRoute();

		if (this.state['title'] instanceof MasterEntity) {
			title = this.state['title'].getName();
		} else {
			title = this.state['title'];
		}
		return (<div className="panel">
			<div className="title_panel" data-url={this.state.link} onClick={this.disableAll.bind(this)}>
				{this.getPreviousTitlePanel(this.state['title'])}
				<span className="title">{title}</span>
				{ current && !(current.getParent() instanceof MasterRoute) ? <i className="fa fa-chevron-left back"></i> : null }
			</div>
			<ul>
				{this.state['content'].map(function (elem, key) {
					{var name = elem.active ? 'active' : '';}
					return <li key={key} className={name} data-url={elem.src} onClick={self.changeActive.bind(self, key)}>{elem.name}</li>;
				})}
			</ul>
		</div>);
	}

}